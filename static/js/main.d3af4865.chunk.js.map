{"version":3,"sources":["assets/word 1k or.png","assets/word 1k bl.png","assets/1st.png","assets/2nd.png","components/Header.js","components/Content.js","components/Posts.js","components/Footer.js","pages/Home.js","assets/enFAQ.js","assets/plFAQ.js","pages/FAQ.js","App.js","services/serviceWorker.js","index.js"],"names":["module","exports","Header","lang","StyledHeader","HeaderInner","to","src","logo","alt","class","styled","header","div","Content","StyledContent","Hero","HeroHeading","HeroInner","HeroText","href","target","p","Posts","StyledPosts","PostsHeading","PostsInner","data-href","data-tabs","data-width","data-height","data-small-header","data-adapt-container-width","data-hide-cover","data-show-facepile","cite","data-lang","data-theme","Footer","StyledFooter","FooterContainer","FooterSection","SectionHeader","Home","state","parallax","pages","content","posts","footer","detectBrowserLanguage","this","setState","window","innerWidth","innerHeight","StyledHome","offset","speed","Heading","secondPlan","firstPlan","Component","enFAQ","Q","A","plFAQ","FAQ","FAQfile","StyledFAQ","FAQContainer","map","item","FAQInner","Question","Answer","App","className","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3af4865.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/word 1k or.5f140422.png\";","module.exports = __webpack_public_path__ + \"static/media/word 1k bl.792ad716.png\";","module.exports = __webpack_public_path__ + \"static/media/1st.208a1afc.png\";","module.exports = __webpack_public_path__ + \"static/media/2nd.b6fa2d57.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../assets/word 1k or.png';\r\n\r\nconst Header = ({ lang }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <HeaderInner>\r\n        <Link to=\"/\">\r\n          <img src={logo} alt=\"logo\" />\r\n        </Link>\r\n\r\n        <Link class=\"more-btn\" to=\"/faq\">\r\n          {lang === 'pl' ? 'WIĘCEJ SZCZEGÓŁÓW' : 'MORE DETAILS'}\r\n        </Link>\r\n      </HeaderInner>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst StyledHeader = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: #fff;\r\n  height: 60px;\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  -webkit-box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.1);\r\n  -moz-box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\nconst HeaderInner = styled.div`\r\n  width: calc(100vw - 100px);\r\n  height: 100%; margin: 0 auto;\r\n   font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  img {\r\n    width: 60px;\r\n  }\r\n\r\n  .more-btn {\r\n    transition: color 0.3s ease-in;\r\n    -webkit-transition: color 0.3s ease-in;\r\n    -moz-transition: color 0.3s ease-in;\r\n    -ms-transition: color 0.3s ease-in;\r\n    -o-transition: color 0.3s ease-in;\r\n\r\n    :hover {\r\n      color: #f44336;\r\n      transition: color 0.3s ease-in\r\n      -webkit-transition: color 0.3s ease-in;\r\n      -moz-transition: color 0.3s ease-in;\r\n      -ms-transition: color 0.3s ease-in;\r\n      -o-transition: color 0.3s ease-in;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Content = ({ lang }) => {\r\n  return (\r\n    <StyledContent>\r\n      {lang === 'pl' ? (\r\n        <Hero>\r\n          <HeroHeading>Czym jest Topic?</HeroHeading>\r\n          <HeroInner>\r\n            <HeroText>\r\n              Topic to platforma, która pozwoli Ci poznac osoby podzielające\r\n              twoje zainteresowania. Nie będziesz musiał już więcej zadawać\r\n              pytań jak <i>Jakie są twoje zainteresowania?</i> czy{' '}\r\n              <i>Czym się zajmujesz?</i> Powiedzmy, że nasza platforma to Omegle\r\n              ale z innym podejściem i celem.\r\n            </HeroText>\r\n            <HeroText>\r\n              Jeśli chcesz się dowiedzieć\r\n              <Link to=\"/faq\"> więcej o projekcie</Link> stworzyliśmy\r\n              <a\r\n                href=\"https://www.behance.net/gallery/95608867/Topic-app-mockup\"\r\n                target=\"_blank\"\r\n              >\r\n                {' '}\r\n                mockup\r\n              </a>{' '}\r\n              który pokazuje kilka ciekawych funkcji. Jeśli podoba Ci się nasz\r\n              pomysł i chcesz nam pomóc się rozwijać, sprawdź naszego{' '}\r\n              <a href=\"https://www.facebook.com/topicplatform/\" target=\"_blank\">\r\n                facebooka\r\n              </a>{' '}\r\n              i{' '}\r\n              <a href=\"https://twitter.com/topicplatform\" target=\"_blank\">\r\n                twittera\r\n              </a>{' '}\r\n              oraz zostaw like i udostępnij innym!\r\n            </HeroText>\r\n          </HeroInner>\r\n        </Hero>\r\n      ) : (\r\n        <Hero>\r\n          <HeroHeading>What's Topic?</HeroHeading>\r\n          <HeroInner>\r\n            <HeroText>\r\n              Topic is a platform that allows you to meet people that share your{' '}\r\n              specific interests. You no longer will have to ask questions such\r\n              as <i>What are you up to?</i> or <i>What's your interest?</i>{' '}\r\n              Let's just say it's Omegle but with different approach.\r\n            </HeroText>\r\n            <HeroText>\r\n              If you want to know <Link to=\"/faq\">more about the project</Link>{' '}\r\n              we made a{' '}\r\n              <a\r\n                href=\"https://www.behance.net/gallery/95608867/Topic-app-mockup\"\r\n                target=\"_blank\"\r\n              >\r\n                mockup\r\n              </a>{' '}\r\n              that shows some of our features. If you like our idea and want us\r\n              to succeed as we do, check out our{' '}\r\n              <a href=\"https://www.facebook.com/topicplatform/\" target=\"_blank\">\r\n                facebook\r\n              </a>{' '}\r\n              and{' '}\r\n              <a href=\"https://twitter.com/topicplatform\" target=\"_blank\">\r\n                twitter\r\n              </a>{' '}\r\n              page, leave a follow and share!\r\n            </HeroText>\r\n          </HeroInner>\r\n        </Hero>\r\n      )}\r\n    </StyledContent>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n\r\nconst StyledContent = styled.div`\r\n  width: 100vw;\r\n  font-weight: 300;\r\n`;\r\nconst Hero = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 90%;\r\n`;\r\nconst HeroHeading = styled.p`\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n\r\n  @media (min-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\nconst HeroInner = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: 700px) {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1000px;\r\n  }\r\n`;\r\nconst HeroText = styled.p`\r\n  text-align: left;\r\n  width: 100%;\r\n  font-size: 1.2rem;\r\n  font-weight: 400;\r\n  margin: 50px 0;\r\n\r\n  i {\r\n    color: #f44336;\r\n  }\r\n  a {\r\n    color: #f44336;\r\n    font-weight: 500;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 45%;\r\n    text-align: left;\r\n    margin: 0;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Posts = () => {\r\n  return (\r\n    <StyledPosts>\r\n      <PostsHeading>Check our social media and share!</PostsHeading>\r\n      <PostsInner>\r\n        <div\r\n          class=\"fb-page\"\r\n          data-href=\"https://www.facebook.com/topicplatform/\"\r\n          data-tabs=\"timeline\"\r\n          data-width=\"350\"\r\n          data-height=\"600\"\r\n          data-small-header=\"false\"\r\n          data-adapt-container-width=\"true\"\r\n          data-hide-cover=\"false\"\r\n          data-show-facepile=\"true\"\r\n        >\r\n          <blockquote\r\n            cite=\"https://www.facebook.com/topicplatform/\"\r\n            class=\"fb-xfbml-parse-ignore\"\r\n          >\r\n            <a href=\"https://www.facebook.com/topicplatform/\">Topic</a>\r\n          </blockquote>\r\n        </div>\r\n        <a\r\n          class=\"twitter-timeline\"\r\n          data-lang=\"en\"\r\n          data-width=\"350\"\r\n          data-height=\"600\"\r\n          data-theme=\"light\"\r\n          href=\"https://twitter.com/topicplatform?ref_src=twsrc%5Etfw\"\r\n        >\r\n          Tweets by topicplatform\r\n        </a>\r\n      </PostsInner>\r\n    </StyledPosts>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n\r\nconst StyledPosts = styled.div`\r\n  width: 100%;\r\n  margin-top: 50px;\r\n\r\n  @media (min-width: 600px) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\nconst PostsHeading = styled.p`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 80%;\r\n  font-weight: 700;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 50px;\r\n\r\n  @media (min-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\nconst PostsInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .fb-page {\r\n    width: 350px;\r\n    margin-bottom: 50px;\r\n\r\n    @media (min-width: 800px) {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 800px) {\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n  }\r\n\r\n  @media (min-width: 1400px) {\r\n    width: 1000px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from '../assets/word 1k bl.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = ({ lang }) => {\r\n  return (\r\n    <StyledFooter>\r\n      <FooterContainer>\r\n        <img src={logo} alt=\"logo\" />\r\n        <FooterSection>\r\n          <SectionHeader>{lang === 'pl' ? 'Produkt' : 'Product'}</SectionHeader>\r\n          <span>\r\n            <Link to=\"/faq\">Android App</Link>\r\n          </span>\r\n          <span>\r\n            <Link to=\"/faq\">iOS App</Link>\r\n          </span>\r\n          <span>\r\n            <Link to=\"/faq\">Web App</Link>\r\n          </span>\r\n        </FooterSection>\r\n\r\n        {lang === 'pl' ? (\r\n          <FooterSection>\r\n            <SectionHeader>Dokumenty</SectionHeader>\r\n            <span>\r\n              <Link to=\"/faq\">O nas & FAQ</Link>\r\n            </span>\r\n            <span>Opinia</span>\r\n            <span>Pomoc</span>\r\n            <span>Polityka pryywatności</span>\r\n          </FooterSection>\r\n        ) : (\r\n          <FooterSection>\r\n            <SectionHeader>Resources</SectionHeader>\r\n            <span>\r\n              <Link to=\"/faq\">About & FAQ</Link>\r\n            </span>\r\n            <span>Feedback</span>\r\n            <span>Support</span>\r\n            <span>Terms & Privacy</span>\r\n          </FooterSection>\r\n        )}\r\n      </FooterContainer>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n\r\nconst StyledFooter = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  background: #f7f7f7;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\nconst FooterContainer = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-top: 30px;\r\n\r\n  img {\r\n    width: 60px;\r\n    margin-top: 15px;\r\n  }\r\n\r\n  @media (min-width: 500px) {\r\n    justify-content: space-around;\r\n  }\r\n\r\n  @media (min-width: 1400px) {\r\n    width: 1000px;\r\n  }\r\n`;\r\nconst FooterSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n\r\n  span {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\nconst SectionHeader = styled.p`\r\n  font-weight: 700;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Content from '../components/Content';\r\nimport Posts from '../components/Posts';\r\nimport Footer from '../components/Footer';\r\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\r\nimport firstPlan from '../assets/1st.png';\r\nimport secondPlan from '../assets/2nd.png';\r\nimport detectBrowserLanguage from 'detect-browser-language';\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lang: 'en',\r\n      parallax: {\r\n        pages: 3.6,\r\n        content: 1,\r\n        posts: 1.8,\r\n        footer: 3,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const lang = detectBrowserLanguage();\r\n    if (lang === 'pl') this.setState({ lang: 'pl' });\r\n    else this.setState({ lang: 'en' });\r\n\r\n    // Parallax RWD\r\n    if (window.innerWidth < 800 && window.innerHeight > 760) {\r\n      this.setState({\r\n        parallax: {\r\n          pages: 3,\r\n          content: 1,\r\n          posts: 1.6,\r\n          footer: 2.7,\r\n        },\r\n      });\r\n    } else if (window.innerWidth > 800 && window.innerHeight < 760) {\r\n      this.setState({\r\n        parallax: {\r\n          pages: 3,\r\n          content: 1.2,\r\n          posts: 1.9,\r\n          footer: 2.6,\r\n        },\r\n      });\r\n    } else if (window.innerWidth > 800 && window.innerHeight > 760) {\r\n      this.setState({\r\n        parallax: {\r\n          pages: 2.54,\r\n          content: 1,\r\n          posts: 1.6,\r\n          footer: 2,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyledHome>\r\n        <Header lang={this.state.lang} />\r\n        <Parallax pages={this.state.parallax.pages}>\r\n          <ParallaxLayer offset={0.3} speed={0.5}>\r\n            <Heading>\r\n              {this.state.lang === 'pl'\r\n                ? 'Nowe media społecznościowe na jakie czekałeś.'\r\n                : \"The new social media you've been waiting for.\"}\r\n            </Heading>\r\n          </ParallaxLayer>\r\n          <ParallaxLayer offset={0.7} speed={0.5}>\r\n            <img src={secondPlan} alt=\"parallax second plan smartphones\" />\r\n          </ParallaxLayer>\r\n          <ParallaxLayer offset={0.8} speed={1}>\r\n            <img src={firstPlan} alt=\"parallax first plan smartphones\" />\r\n          </ParallaxLayer>\r\n          <ParallaxLayer offset={this.state.parallax.content} speed={0.5}>\r\n            <Content lang={this.state.lang} />\r\n          </ParallaxLayer>\r\n          <ParallaxLayer offset={this.state.parallax.posts} speed={0.5}>\r\n            <Posts />\r\n          </ParallaxLayer>\r\n          <ParallaxLayer offset={this.state.parallax.footer} speed={0.5}>\r\n            <Footer lang={this.state.lang} />\r\n          </ParallaxLayer>\r\n        </Parallax>\r\n      </StyledHome>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\nconst StyledHome = styled.div`\r\n  width: 100vw;\r\n  text-align: center;\r\n\r\n  .parallax-layer {\r\n    width: 100vw;\r\n    margin: 0 auto;\r\n  }\r\n  .parallax-image {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nconst Heading = styled.p`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  width: 80%;\r\n  font-size: 1.8rem;\r\n\r\n  margin-bottom: 50px;\r\n\r\n  @media (min-width: 500px) {\r\n    width: 80%;\r\n    font-size: 2.2rem;\r\n  }\r\n  @media (min-width: 820px) {\r\n    width: 550px;\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n","const enFAQ = [\r\n  {\r\n    Q: 'What’s the release date?',\r\n    A:\r\n      'We are planning to be available in the 3rd quarter of 2020 at every platform possible.',\r\n  },\r\n  {\r\n    Q: 'How can I contact you?',\r\n    A:\r\n      'You’re welcome to contact us on any of our social media by direct message or email us on: topic.platform@gmail.com',\r\n  },\r\n  {\r\n    Q: 'How can I help and get involved?',\r\n    A:\r\n      'First of all we appreciate every share of our social media and website. The bigger is our fanbase the better experience our users will get at the end. If you want to get involved in a different way, feel free to contact us and we’ll respond ASAP.',\r\n  },\r\n  {\r\n    Q: 'Are you looking for investors?',\r\n    A:\r\n      'Yeah! To create the best product possible we need money and anyone interested in serious investment propositions are welcome and feel free to get in touch.',\r\n  },\r\n  {\r\n    Q: 'Are there any similar platforms?',\r\n    A:\r\n      'Not really, Omegle offers categories to be included but it’s optional and it’s not specific enough to work as intended, people can call the same thing in a few different ways. The next point worth mentioning is that there is no platform that combines categories with group chat. We are for now one of a kind.',\r\n  },\r\n  {\r\n    Q: 'Why should I use Topic?',\r\n    A:\r\n      'As mentioned above, there is no real competitor at the market for the moment and if you’re interested in the idea you definitely should try us out.',\r\n  },\r\n  {\r\n    Q: 'Who’s creating Topic?',\r\n    A:\r\n      'We are two friends from high school that we just graduated from. We are Przybył Marcin and Sala Wojciech, living in Poland and passionate about marketing, business and coding we managed to combine our skills and create together few projects already.',\r\n  },\r\n  {\r\n    Q: 'What’s the monetization plan?',\r\n    A:\r\n      'We are planning on creating two branches of monetization flows. First one is simply an advertisement that will be non-invasive for the user. The second one is a subscription plan for premium accounts. These accounts will have more features than people using the platform without them. There accounts would be for sure very interesting for users who are streamers and celebrities that want to have a chat with their fans.',\r\n  },\r\n  {\r\n    Q: 'What platforms is Topic on?',\r\n    A:\r\n      'The more users we get the better experience it’s gonna be. Going with that we will do our best to be able on every platform possible. We’re talking apps for Android, iOS, Web app and maybe even desktop apps in the future.',\r\n  },\r\n  {\r\n    Q: 'Have you worked on any other projects?',\r\n    A:\r\n      'Yes, in fact we’ve been working on a few in our past but there is one big one in our portfolio. We’re not feeling like sharing about it more about the moment with you, sorry.',\r\n  },\r\n  {\r\n    Q: 'Are you looking for new developers/ designers?',\r\n    A:\r\n      'At the moment we are not able to hire anyone but if you believe in the idea and want to join us feel free to contact with us!',\r\n  },\r\n  {\r\n    Q: 'What’s the user flow using Topic?',\r\n  },\r\n];\r\n\r\nexport default enFAQ;\r\n","const plFAQ = [\r\n  {\r\n    Q: 'Kiedy będzie premiera?',\r\n    A:\r\n      'Planujemy być już dostępni w trzecim kwartale 2020 roku na wszystkich możliwych platformach.',\r\n  },\r\n  {\r\n    Q: 'Jak możemy się z Wami skontaktować?',\r\n    A:\r\n      'Zachęcamy do kontaktu poprzez nasze social media lub adres mailowy: topic.platform@gmail.com',\r\n  },\r\n  {\r\n    Q: 'W jaki sposób mogę się zaangażować w pomoc?',\r\n    A:\r\n      'Doceniamy każde udostępnienie w social mediach i na naszej stronie. Czym większe będzie grono fanów - tym lepszy uda się uzyskać efekt końcowy. Jeżeli chciałbyś się zaangażować w inny sposób możesz to zrobić kontaktując się z nami. Odpowiemy tak szybko jak możemy.',\r\n  },\r\n  {\r\n    Q: 'Czy szukacie inwestorów?',\r\n    A:\r\n      'Tak! Do stworzenia możliwie najlepszego produktu potrzebujemy pieniędzy. Jeżeli jest ktoś zainteresowany inwestycją w naszą działalność i nas samych, zapraszamy do kontaktu.',\r\n  },\r\n  {\r\n    Q: 'Kto tworzy zespół Topic?',\r\n    A:\r\n      'Jesteśmy dwójką przyjaciół ze szkoły średniej, którą właśnie skończyliśmy. Nazywamy się Sala Wojciech i Przybył Marcin, pasjonujemy się takimi dziedzinami jak marketing, biznes i programowanie. Udało się połączyć nasze wspólne zainteresowania, aby stworzyć już kilka projektów.',\r\n  },\r\n  {\r\n    Q: 'Dlaczego powinienem korzystać z Topic?',\r\n    A:\r\n      'Jak wspomniano powyżej, w tym momencie na rynku nie ma żadnej konkurencji, więc jeżeli jesteś zainteresowany naszą platformą, powinieneś się zapoznać.',\r\n  },\r\n  {\r\n    Q: 'Czy istnieją podobne platformy lub konkurencja?',\r\n    A:\r\n      'Obecnie na rynku nie istnieje żaden konkurencyjny serwis podobny do naszego. Istnieją pokrewne strony takie jak np. Omegle, które posiada możliwość nieobowiązkowego wpisywania swoich zainteresowań i ogranicza się do maksymalnie dwóch użytkowników. Funkcje te nie działają zgodnie z zamierzonym celem, a ich użytkownicy skarżą się na brak ciekawych rozmów. Jesteśmy więc jedyni w swoim rodzaju, ponieważ nie istnieje żaden serwis, który łączy grupowe rozmowy wideo z tematycznymi forami internetowymi.',\r\n  },\r\n  {\r\n    Q: 'Na czym zarabiacie?',\r\n    A:\r\n      'Planujemy uruchomić dwie główne drogi monetyzacji. Pierwszą z nich jest uruchomienie mało inwazyjnych reklam na naszym serwisie. Drugą drogą generowania dochodów jest wprowadzenie subskrypcji Premium. Użytkownicy Premium są w posiadaniu większej ilości dostępnych funkcji na naszej stronie. Konta te będą przede wszystkim bardzo atrakcyjne dla streamerów oraz celebrytów, którzy pragną porozmawiać ze swoimi fanami w czasie rzeczywistym.',\r\n  },\r\n  {\r\n    Q: 'Na jakich platformach występuje Topic?',\r\n    A:\r\n      'Czym więcej użytkowników będzie korzystało z naszej platformy, tym lepsze doznania będziemy w stanie dostarczyć. Zrobimy wszystko co w naszej mocy, aby pojawić się na wszystkich możliwych platformach. Mówimy tutaj o systemach takich jak Android, iOS, a nawet przeglądarce internetowej.',\r\n  },\r\n  {\r\n    Q: 'Czy posiadacie doświadczenie w tworzeniu aplikacji?',\r\n    A:\r\n      'Tak, w przeszłości tworzyliśmy wspólnie kilka projektów. Platforma Topic jest ich uwiecznieniem. Niestety, nie czujemy się na siłach, aby rozmawiać o poprzednich naszych koncepcjach - być może ten moment kiedyś nastąpi.',\r\n  },\r\n  {\r\n    Q: 'Czy szukacie programistów/ grafików?',\r\n    A:\r\n      'W tym momencie nie jesteśmy w stanie zapewnić etatowego zatrudnienia, lecz jeżeli ktokolwiek chciałby wesprzeć naszą idee i dołączyć do naszej drużyny, może się z nami śmiało skontaktować.',\r\n  },\r\n  {\r\n    Q: 'Jak użytkownik korzysta z aplikacji?',\r\n  },\r\n];\r\n\r\nexport default plFAQ;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport enFAQ from '../assets/enFAQ';\r\nimport plFAQ from '../assets/plFAQ';\r\nimport detectBrowserLanguage from 'detect-browser-language';\r\n\r\nclass FAQ extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      FAQfile: enFAQ,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const lang = detectBrowserLanguage();\r\n    if (lang === 'pl') this.setState({ FAQfile: plFAQ });\r\n    else this.setState({ FAQfile: enFAQ });\r\n  }\r\n  render() {\r\n    return (\r\n      <StyledFAQ>\r\n        <Header lang={detectBrowserLanguage()} />\r\n        <FAQContainer>\r\n          {this.state.FAQfile.map((item) => (\r\n            <FAQInner>\r\n              <Question>{item.Q}</Question>\r\n              <Answer>{item.A}</Answer>\r\n            </FAQInner>\r\n          ))}\r\n\r\n          {detectBrowserLanguage() === 'pl' ? (\r\n            <Answer>\r\n              1. Po otwarciu aplikacji, użytkownik wybiera język, w którym\r\n              będzie rozmawiał z innymi.\r\n              <br />\r\n              <br />\r\n              2. Następnie, użytkownik wybiera swoje zainteresowanie spośród\r\n              przedstawionych mu kategorii, w których chce rozmawiać.\r\n              <br />\r\n              <br />\r\n              3. Użytkownik jest przekierowywany do okna takiego jak w Snapchat,\r\n              widzi tylko obraz ze swojej kamery, wraz z opcjami takimi jak\r\n              wyszukiwanie nowych osób lub kopiowanie linku, który odpowiada za\r\n              dostęp do obecnego kanału. Ostatnią, lecz również ważną funkcją\r\n              jest opcja zmiany preferencji języka i kategorii, bez\r\n              niepotrzebnego resetowania aplikacji.\r\n              <br />\r\n              <br />\r\n              4. W obecnym oknie, użytkownik może rozpocząć szukanie kanałów z\r\n              losowymi osobami lub zapraszać swoich przyjaciół do pokoju, w celu\r\n              wspólnego doświadczania wrażeń.\r\n              <br />\r\n              <br />\r\n              5. Dopiero teraz rozpoczyna się prawdziwa przygoda, ponieważ\r\n              rozmowa jeden na jednego nie jest tak ekscytująca, jak rozmowa w\r\n              kilka osób jednocześnie. W tym momencie do użytkownika dochodzi\r\n              kilka funkcji, takich jak np. możliwość przełączenia się na czat\r\n              tekstowy, wyciszenia mikrofonu, wygaszenia kamery, opuszczenia\r\n              obecnego kanału lub też wyszukania następnych pokoi. Opcja\r\n              natychmiastowego opuszczania kanału jest oczywista i kieruje ona\r\n              do okna, w którym widzimy tylko swoją kamerę. Przycisk\r\n              wyszukiwania następnych osób pozwala na szukanie potencjalnych\r\n              użytkowników, obracających się w kręgu naszych zainteresowań.\r\n              Wszystkie opcje wyżej wymienione zostają cały czas z\r\n              użytkownikiem, bez względu na to ile osób rozmawia aktualnie w\r\n              pokoju.\r\n              <br />\r\n              <br />\r\n              6. Powiedzmy, że rozmawiamy z czterema osobami i chcemy zabrać\r\n              głos w jakiejś ważnej sprawie, tym samym nie przerywając nikomu\r\n              dyskusji. Możemy w tym samym momencie skorzystać z oznaczenia\r\n              danego rozmówcy, korzystając z czatu tekstowego wpisując jego\r\n              kolor, a następnie wysłać do niego wiadomość. Nasz serwis stawia\r\n              na anonimowość., więc użytkownik nie musi zakładać żadnych kont,\r\n              wyjątek stanowi usługa Premium. Z następną funkcją użytkownik ma\r\n              styczność wtedy kiedy chce dojść do kanału, na którym rozmawia co\r\n              najmniej dwóch użytkowników. Użytkownik ten jest domyślnie\r\n              wyciszany na 10 sekund, ponieważ mógłby on w tym czasie zacząć\r\n              przeszkadzać innym rozmówcom. Jeżeli użytkownik okaże się być na\r\n              tyle złośliwy, że zacznie sprawiać problemy na kanale, na zasadzie\r\n              demokratycznego głosowania grupa może wyrzucić go z pokoju, bądź\r\n              zgłosić za naruszenia. Dostarczamy również takich opcji jak\r\n              wyciszanie i wyłączanie kamery konkretnego użytkownika.{' '}\r\n            </Answer>\r\n          ) : (\r\n            <Answer>\r\n              1. After opening our app, the user chooses the language he/ she\r\n              wishes to talk to others.\r\n              <br />\r\n              <br />\r\n              2. Next, the user picks the category he/ she wants to talk about.\r\n              <br />\r\n              <br />\r\n              3. User is redirected to a view that just like on snapchat shows\r\n              only his camera view with options to search for a lobby and copy a\r\n              share link. The last but not least option is a settings panel that\r\n              lets you change language and category preferences without\r\n              restarting the app.\r\n              <br />\r\n              <br />\r\n              4. From that point the user can search for a lobby with random\r\n              people or invite a friend and continue the experience together.\r\n              <br />\r\n              <br />\r\n              5. Now the journey really begins but the conversation one on one\r\n              is not as exciting. Some options come into play though and the\r\n              user now has a text chat, camera, microphone exclusion and leave\r\n              now or search for new lobby options. The leave now option is\r\n              obvious enough but the search for a new lobby button lets you look\r\n              for new potential people without disconnecting current ones. All\r\n              of the above options stay for the rest no matter the amount of\r\n              people in the lobby.\r\n              <br />\r\n              <br />\r\n              6. Let’s say you’re talking with 4 people and we got a few more\r\n              interesting points we’d like to share with you. First if you want\r\n              to make a point to someone and not interrupt the conversation you\r\n              can use a chat and tag someone by its color as it’s prefered\r\n              recognition system, we provide some anonymity and there is no\r\n              account creation, except premium accounts in our flow. The next\r\n              one is that user that is joining a lobby of at least two people is\r\n              by default muted for 10s not to spam, shout and interrupt others.\r\n              If the user ends up malicious he can be kicked by a vote of the\r\n              rest and as well reported. We provide options such as muting the\r\n              specific person or hiding his camera view.\r\n            </Answer>\r\n          )}\r\n        </FAQContainer>\r\n      </StyledFAQ>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FAQ;\r\n\r\nconst StyledFAQ = styled.div`\r\n  width: 100vw;\r\n  margin-bottom: 200px;\r\n`;\r\nconst FAQContainer = styled.div`\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 500px) {\r\n    width: 400px;\r\n  }\r\n\r\n  @media (min-width: 800px) {\r\n    width: 700px;\r\n  }\r\n`;\r\nconst FAQInner = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\nconst Question = styled.p`\r\n  font-weight: 700;\r\n  font-size: 1.6rem;\r\n`;\r\nconst Answer = styled.p`\r\n  margin: 0;\r\n`;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport FAQ from './pages/FAQ';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/faq\" component={FAQ} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './services/serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}