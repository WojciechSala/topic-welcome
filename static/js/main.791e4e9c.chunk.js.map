{"version":3,"sources":["assets/word 1k or.png","assets/word 1k bl.png","assets/1st.png","assets/2nd.png","components/Header.js","components/Content.js","components/Posts.js","components/Footer.js","pages/Home.js","assets/FAQtext.js","pages/FAQ.js","App.js","services/serviceWorker.js","index.js"],"names":["module","exports","Header","StyledHeader","HeaderInner","to","src","logo","alt","styled","header","div","Content","StyledContent","Hero","HeroHeading","HeroInner","HeroText","href","target","p","Posts","StyledPosts","PostsHeading","PostsInner","class","data-href","data-tabs","data-width","data-height","data-small-header","data-adapt-container-width","data-hide-cover","data-show-facepile","cite","data-lang","data-theme","Footer","StyledFooter","FooterContainer","FooterSection","SectionHeader","Home","StyledHome","pages","window","innerWidth","offset","speed","Heading","secondPlan","firstPlan","FAQtext","Q","A","FAQ","StyledFAQ","FAQContainer","map","item","FAQInner","Question","Answer","App","className","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.791e4e9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/word 1k or.5f140422.png\";","module.exports = __webpack_public_path__ + \"static/media/word 1k bl.792ad716.png\";","module.exports = __webpack_public_path__ + \"static/media/1st.208a1afc.png\";","module.exports = __webpack_public_path__ + \"static/media/2nd.b6fa2d57.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../assets/word 1k or.png';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <HeaderInner>\r\n        <Link to=\"/\">\r\n          <img src={logo} alt=\"logo\" />\r\n        </Link>\r\n        <Link to=\"/faq\">FAQ</Link>\r\n      </HeaderInner>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst StyledHeader = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: #fff;\r\n  height: 60px;\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  -webkit-box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.1);\r\n  -moz-box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\nconst HeaderInner = styled.div`\r\n  width: calc(100vw - 100px);\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  img {\r\n    width: 60px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Content = () => {\r\n  return (\r\n    <StyledContent>\r\n      <Hero>\r\n        <HeroHeading>What's Topic?</HeroHeading>\r\n        <HeroInner>\r\n          <HeroText>\r\n            Topic is a platform that allows you to meet people that share your{' '}\r\n            specific interests. You no longer will have to ask questions such as{' '}\r\n            <i>What are you up to?</i> or <i>What's your interest?</i> Let's\r\n            just say it's Omegle but with different approach.\r\n          </HeroText>\r\n          <HeroText>\r\n            If you want to know more about the project we made a{' '}\r\n            <a\r\n              href=\"https://www.behance.net/gallery/95608867/Topic-app-mockup\"\r\n              target=\"_blank\"\r\n            >\r\n              mockup\r\n            </a>{' '}\r\n            that shows some of our features. If you like our idea and want us to\r\n            succeed as we do, check out our{' '}\r\n            <a href=\"https://www.facebook.com/topicplatform/\" target=\"_blank\">\r\n              facebook\r\n            </a>{' '}\r\n            and{' '}\r\n            <a href=\"https://twitter.com/topicplatform\" target=\"_blank\">\r\n              twitter\r\n            </a>{' '}\r\n            page, leave a follow and share!\r\n          </HeroText>\r\n        </HeroInner>\r\n      </Hero>\r\n    </StyledContent>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n\r\nconst StyledContent = styled.div`\r\n  width: 100vw;\r\n`;\r\nconst Hero = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 90%;\r\n`;\r\nconst HeroHeading = styled.p`\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n\r\n  @media (min-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\nconst HeroInner = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: 700px) {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\nconst HeroText = styled.p`\r\n  text-align: left;\r\n  width: 100%;\r\n  font-size: 1.2rem;\r\n  font-weight: 400;\r\n  margin: 50px 0;\r\n\r\n  i {\r\n    color: #f44336;\r\n  }\r\n  a {\r\n    color: #f44336;\r\n    font-weight: 700;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 45%;\r\n    text-align: left;\r\n    margin: 0;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Posts = () => {\r\n  return (\r\n    <StyledPosts>\r\n      <PostsHeading>Check our social media and share!</PostsHeading>\r\n      <PostsInner>\r\n        <div\r\n          class=\"fb-page\"\r\n          data-href=\"https://www.facebook.com/topicplatform/\"\r\n          data-tabs=\"timeline\"\r\n          data-width=\"350\"\r\n          data-height=\"600\"\r\n          data-small-header=\"false\"\r\n          data-adapt-container-width=\"true\"\r\n          data-hide-cover=\"false\"\r\n          data-show-facepile=\"true\"\r\n        >\r\n          <blockquote\r\n            cite=\"https://www.facebook.com/topicplatform/\"\r\n            class=\"fb-xfbml-parse-ignore\"\r\n          >\r\n            <a href=\"https://www.facebook.com/topicplatform/\">Topic</a>\r\n          </blockquote>\r\n        </div>\r\n        <a\r\n          class=\"twitter-timeline\"\r\n          data-lang=\"en\"\r\n          data-width=\"350\"\r\n          data-height=\"600\"\r\n          data-theme=\"light\"\r\n          href=\"https://twitter.com/topicplatform?ref_src=twsrc%5Etfw\"\r\n        >\r\n          Tweets by topicplatform\r\n        </a>\r\n      </PostsInner>\r\n    </StyledPosts>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n\r\nconst StyledPosts = styled.div`\r\n  width: 100%;\r\n  margin-top: 50px;\r\n\r\n  @media (min-width: 600px) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\nconst PostsHeading = styled.p`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 80%;\r\n  font-weight: 700;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 50px;\r\n\r\n  @media (min-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\nconst PostsInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .fb-page {\r\n    width: 350px;\r\n    margin-bottom: 50px;\r\n\r\n    @media (min-width: 800px) {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 800px) {\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from '../assets/word 1k bl.png';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <StyledFooter>\r\n      <FooterContainer>\r\n        <img src={logo} alt=\"logo\" />\r\n        <FooterSection>\r\n          <SectionHeader>Product</SectionHeader>\r\n          <span>Android App</span>\r\n          <span>iOS App</span>\r\n          <span>Web App</span>\r\n        </FooterSection>\r\n        <FooterSection>\r\n          <SectionHeader>Resources</SectionHeader>\r\n          <span>About & FAQ</span>\r\n          <span>Feedback</span>\r\n          <span>Support</span>\r\n          <span>Terms & Privacy</span>\r\n        </FooterSection>\r\n      </FooterContainer>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n\r\nconst StyledFooter = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  background: #f7f7f7;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\nconst FooterContainer = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-top: 50px;\r\n\r\n  img {\r\n    width: 60px;\r\n    margin-top: 15px;\r\n  }\r\n\r\n  @media (min-width: 500px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\nconst FooterSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n\r\n  span {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\nconst SectionHeader = styled.p`\r\n  font-weight: 700;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Content from '../components/Content';\r\nimport Posts from '../components/Posts';\r\nimport Footer from '../components/Footer';\r\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\r\nimport firstPlan from '../assets/1st.png';\r\nimport secondPlan from '../assets/2nd.png';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <StyledHome>\r\n      <Header />\r\n      <Parallax pages={window.innerWidth > 800 ? 2.9 : 3.6}>\r\n        <ParallaxLayer offset={0.3} speed={0.5}>\r\n          <Heading>The new social media you've been waiting for.</Heading>\r\n        </ParallaxLayer>\r\n        <ParallaxLayer offset={0.7} speed={0.5}>\r\n          <img src={secondPlan} />\r\n        </ParallaxLayer>\r\n        <ParallaxLayer offset={0.8} speed={1}>\r\n          <img src={firstPlan} />\r\n        </ParallaxLayer>\r\n        <ParallaxLayer offset={1} speed={0.5}>\r\n          <Content />\r\n        </ParallaxLayer>\r\n        <ParallaxLayer offset={window.innerWidth > 800 ? 1.7 : 1.8} speed={0.5}>\r\n          <Posts />\r\n        </ParallaxLayer>\r\n        <ParallaxLayer offset={window.innerWidth > 800 ? 2.45 : 3} speed={0.5}>\r\n          <Footer />\r\n        </ParallaxLayer>\r\n      </Parallax>\r\n    </StyledHome>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst StyledHome = styled.div`\r\n  width: 100vw;\r\n  text-align: center;\r\n\r\n  .parallax-layer {\r\n    width: 100vw;\r\n    margin: 0 auto;\r\n  }\r\n  .parallax-image {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nconst Heading = styled.p`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  width: 80%;\r\n  font-size: 1.8rem;\r\n\r\n  margin-bottom: 50px;\r\n\r\n  @media (min-width: 500px) {\r\n    width: 80%;\r\n    font-size: 2.2rem;\r\n  }\r\n  @media (min-width: 820px) {\r\n    width: 550px;\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n","const FAQtext = [\r\n  { Q: \"What's Topic?\", A: 'Topic is a platform that...' },\r\n  { Q: '2', A: '2A' },\r\n  { Q: '3', A: '3A' },\r\n];\r\n\r\nexport default FAQtext;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport FAQtext from '../assets/FAQtext';\r\n\r\nconst FAQ = () => {\r\n  return (\r\n    <StyledFAQ>\r\n      <Header />\r\n      <FAQContainer>\r\n        {FAQtext.map((item) => (\r\n          <FAQInner>\r\n            <Question>{item.Q}</Question>\r\n            <Answer>{item.A}</Answer>\r\n          </FAQInner>\r\n        ))}\r\n      </FAQContainer>\r\n    </StyledFAQ>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n\r\nconst StyledFAQ = styled.div`\r\n  width: 100vw;\r\n`;\r\nconst FAQContainer = styled.div`\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: self-start;\r\n\r\n  @media (min-width: 500px) {\r\n  }\r\n`;\r\nconst FAQInner = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\nconst Question = styled.p`\r\n  font-weight: 700;\r\n  font-size: 1.6rem;\r\n`;\r\nconst Answer = styled.p``;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport FAQ from './pages/FAQ';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/faq\" component={FAQ} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './services/serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}